{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
{#data de criação da node#}
{% set createdTime = node.getCreatedTime() %}
<article class="artigo-completo {{ attributes.class }}" {{ attributes|without('class') }}>
    <div class="caption col-md-12 no-padding">
        <hgroup>
            <h5>
                {{ content.field_chapeu }}
                <time pubdate datetime="{{ createdTime|date('Y-m-d H:i') }}">· {{ createdTime|date('d/m/Y H:i') }}</time>
            </h5>
            <h1>{{ node.label }}</h1>
            <h2>{{ node.body.summary }}</h2>
        </hgroup>
    </div>
    <div class="col-md-12 no-padding">
        <div class="article-share">
            {% set tid = node.field_fonte_fornecedor.target_id  %}
            {% if tid %}
                {% if tid == 20%}
                    <div class="publisher col-md-6 no-padding">
                        {{ drupal_field('field_imagem_marca', 'taxonomy_term', tid) }}
                        <strong>por</strong>
                        {% if author_name != "Estudantes" %}
                            {{ node.uid.entity.name.value }}
                        {% endif %}
                    </div>
                {% else %}
                    <div class="publisher col-md-6 no-padding">
                        {{ drupal_field('field_imagem_marca', 'taxonomy_term', tid) }}
                    </div>
                {% endif %}
            {% endif %}
            <div class="social-buttons col-md-6 no-padding">
                <ul class="social pull-right">
                    <li>
                        <div class="facebook">
                            <div class="fb-like" data-href="{{ url('<current>') }}" data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>
                        </div>
                    </li>
                    <li>
                        <div class="gplus">
                            <script src="https://apis.google.com/js/platform.js" async defer>
                                {
                                    lang: 'pt-BR'
                                }
                            </script>
                            <div class="g-plus" data-action="share" data-annotation="bubble" data-height="22" data-href="{{ url('<current>') }}"></div>
                        </div>
                    </li>
                    <li>
                        <div class="twitter">
                            <a href="{{ url('<current>') }}" class="twitter-share-button">Tweet</a>
                            <script>!function (d, s, id) {
                                    var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https';
                                    if (!d.getElementById(id)) {
                                        js = d.createElement(s);
                                        js.id = id;
                                        js.src = p + '://platform.twitter.com/widgets.js';
                                        fjs.parentNode.insertBefore(js, fjs);
                                    }
                                }(document, 'script', 'twitter-wjs');
                            </script>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-12 no-padding">
        {% if node.field_exibir_na_node_.value == 1 %}
            <figure>
                {{ content.field_imagem_topo }}            
                <figcaption>
                    {{ node.field_imagem_topo.title }}
                    {% if node.field_imagem_topo.alt is not null %}
                        |   {{ node.field_imagem_topo.alt }}
                    {% endif %}
                </figcaption>
            </figure>
        {% endif %}
    </div>
    {% if content.field_galeria_imagens is not null %}
        {{ attach_library('saojoao2018/image-gallery') }}
        <div class="col-md-12 no-padding">
            {{ content.field_galeria_imagens }}
        </div>
    {% endif %}
    <div class="col-md-12 no-padding">
        {{ content.body }}
    </div>
    {% if (node.field_podcast.value) %}
        {#Definindo o iframe para podcast#}
        {% set podcast %}
            <iframe width="350" height="50" src="{{ node.field_podcast.value }}" scrolling="no" frameborder="0"></iframe>
            {% endset %}
        <div class="col-md-12 no-padding">
            {{ podcast }}
        </div>
    {% endif %}
    {% if(node.field_video.value) %}
        {# Definindo iframe de video #}
        {% set video %}
            <iframe allowfullscreen webkitallowfullscreen mozallowfullscreen width="960" height="540" src="{{ node.field_video.value }}" scrolling="no" frameborder="0" allow="geolocation; microphone; camera; encrypted-media; midi"></iframe>
            {% endset %}
        <div class="col-md-12 no-padding">
            {{ video }}
        </div>
    {% endif %}
    <div class="tags col-sm-12 div no-padding">
        <div class="field field-name-field-tags field-type-taxonomy-term-reference field-label-above">
            <div class="field-label">Tags:&nbsp;</div>
            {{ content.field_tags }}
        </div>
    </div>
    <div class="comments">
        <h2>Comentários</h2>
        <div class="fb-comments" data-href="{{ url('<current>') }}" data-width="100%" data-numposts="5"></div>
    </div>
</article>
<div class="noticias-relacionadas col-md-12 no-padding">
    <h5>Últimas notícias</h5>
    <div class="col-md-12 no-padding">
        {{ drupal_view('ultimas_noticias', 'block_ultimas') }}
    </div>
</div>